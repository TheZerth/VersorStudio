# This is the CMakeCache file.
# For build in directory: /home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug
# It was generated by CMake: /home/zerth/Documents/Development/Tools/clion/bin/cmake/linux/x64/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CCACHE:FILEPATH=CCACHE-NOTFOUND

//Path to a program.
CCACHE_FOUND:FILEPATH=CCACHE_FOUND-NOTFOUND

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//Enable colored diagnostics throughout.
CMAKE_COLOR_DIAGNOSTICS:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-11

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-11

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-11

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-11

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/CMakeFiles/pkgRedirects

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//No help, variable specified on the command line.
CMAKE_MAKE_PROGRAM:UNINITIALIZED=/home/zerth/Documents/Development/Tools/clion/bin/ninja/linux/x64/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=VersorStudio

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=1.5.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=5

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//Path to a program.
CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND

//No help, variable specified on the command line.
CMAKE_TOOLCHAIN_FILE:UNINITIALIZED=/home/zerth/Documents/Development/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable static analysis with clang-tidy
ENABLE_CLANG_TIDY:BOOL=OFF

//Enable static analysis with cppcheck
ENABLE_CPPCHECK:BOOL=OFF

//Directory under which to collect all populated content
FETCHCONTENT_BASE_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/_deps

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Path to a file.
FREETYPE_INCLUDE_DIR_freetype2:PATH=/usr/include/freetype2

//Path to a file.
FREETYPE_INCLUDE_DIR_ft2build:PATH=/usr/include/freetype2

//Path to a library.
FREETYPE_LIBRARY_DEBUG:FILEPATH=FREETYPE_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
FREETYPE_LIBRARY_RELEASE:FILEPATH=/usr/lib/x86_64-linux-gnu/libfreetype.so

//Add cmake install() instructions with hello_imgui_add_app
HELLOIMGUI_ADD_APP_WITH_INSTALL:BOOL=ON

//Hello imgui base path
HELLOIMGUI_BASEPATH:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external/hello_imgui/hello_imgui

//Build demos
HELLOIMGUI_BUILD_DEMOS:BOOL=OFF

//Build docs
HELLOIMGUI_BUILD_DOCS:BOOL=OFF

HELLOIMGUI_BUILD_IMGUI:BOOL=OFF

//Build tests
HELLOIMGUI_BUILD_TESTS:BOOL=OFF

//Hello imgui cmake path
HELLOIMGUI_CMAKE_PATH:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external/hello_imgui/hello_imgui/hello_imgui_cmake

//Create Android studio projects in build dir
HELLOIMGUI_CREATE_ANDROID_STUDIO_PROJECT:BOOL=OFF

//Download and build Freetype if needed
HELLOIMGUI_DOWNLOAD_FREETYPE_IF_NEEDED:BOOL=OFF

//Download and build GLFW if needed
HELLOIMGUI_DOWNLOAD_GLFW_IF_NEEDED:BOOL=OFF

//Download and build GLFW if needed
HELLOIMGUI_DOWNLOAD_SDL_IF_NEEDED:BOOL=OFF

//Fetch imgui_test_engine from https://github.com/pthom/imgui_test_engine/
// (branch imgui_bundle)
HELLOIMGUI_FETCH_IMGUI_TEST_ENGINE:BOOL=OFF

//Force static linking of freetype (only used for python bindings)
HELLOIMGUI_FREETYPE_STATIC:BOOL=OFF

HELLOIMGUI_HAS_DIRECTX11:BOOL=OFF

HELLOIMGUI_HAS_DIRECTX12:BOOL=OFF

HELLOIMGUI_HAS_METAL:BOOL=OFF

//Use OpenGL3 as a rendering backend
HELLOIMGUI_HAS_OPENGL3:BOOL=OFF

//Use Vulkan as a rendering backend
HELLOIMGUI_HAS_VULKAN:BOOL=OFF

//Allow headless mode (will use Null rendering/platform backend)
HELLOIMGUI_HEADLESS:BOOL=OFF

HELLOIMGUI_IMGUI_SOURCE_DIR:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external/imgui/imgui

HELLOIMGUI_IMGUI_TEST_ENGINE_SOURCE_DIR:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external/imgui_test_engine/imgui_test_engine

//Install hello_imgui
HELLOIMGUI_INSTALL:BOOL=OFF

//Implement STB_IMAGE_IMPLEMENTATION inside hello_imgui
HELLOIMGUI_STB_IMAGE_IMPLEMENTATION:BOOL=ON

//Implement STB_IMAGE_WRITE_IMPLEMENTATION inside hello_imgui
HELLOIMGUI_STB_IMAGE_WRITE_IMPLEMENTATION:BOOL=ON

//Name of the hello_imgui target
HELLOIMGUI_TARGET:STRING=hello_imgui

//Use freetype for text rendering
HELLOIMGUI_USE_FREETYPE:BOOL=ON

//Use Glfw3 as a platform backend
HELLOIMGUI_USE_GLFW3:BOOL=OFF

//Use imgui from cmake package (provided by vcpkg for example)
// * Must be on docking branch*
HELLOIMGUI_USE_IMGUI_CMAKE_PACKAGE:BOOL=OFF

//Use Sdl2 as a platform backend
HELLOIMGUI_USE_SDL2:BOOL=OFF

//Use imgui-ws for remote rendering
HELLOIMGUI_WITH_IMGUIWS:BOOL=OFF

//Use netImgui for remote rendering
HELLOIMGUI_WITH_NETIMGUI:BOOL=OFF

//Provide ImGui Test engine
HELLOIMGUI_WITH_TEST_ENGINE:BOOL=ON

//Use imgui as a shared library
HELLO_IMGUI_IMGUI_SHARED:BOOL=OFF

IMGUIBUNDLE_EXTERNAL_PATH:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external

//clone submodules if needed during configure
IMGUI_BUNDLE_AUTO_CLONE_SUBMODULES:BOOL=ON

//Build CI automation tests
IMGUI_BUNDLE_BUILD_CI_AUTOMATION_TESTS:BOOL=OFF

//Build imgui_bundle C++ demos
IMGUI_BUNDLE_BUILD_DEMOS:BOOL=OFF

//Build ImGui Bundle doc
IMGUI_BUNDLE_BUILD_DOC:BOOL=OFF

//build python bindings
IMGUI_BUNDLE_BUILD_PYTHON:BOOL=OFF

//Build ImGui Bundle with address sanitizer
IMGUI_BUNDLE_BUILD_WITH_ASAN:BOOL=OFF

//Build ImGui Bundle with memory sanitizer
IMGUI_BUNDLE_BUILD_WITH_MEMORY_SANITIZER:BOOL=OFF

//Build ImGui Bundle with thread sanitizer
IMGUI_BUNDLE_BUILD_WITH_TSAN:BOOL=OFF

//Build ImGui Bundle with undefined behavior sanitizer
IMGUI_BUNDLE_BUILD_WITH_UB_SANITIZER:BOOL=OFF

IMGUI_BUNDLE_CMAKE_PATH:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/imgui_bundle_cmake

//Disable ImFileDialog
IMGUI_BUNDLE_DISABLE_IMFILEDIALOG:BOOL=OFF

//Disable ImGuizmo
IMGUI_BUNDLE_DISABLE_IMGUIZMO:BOOL=OFF

//Disable imgui-node-editor
IMGUI_BUNDLE_DISABLE_IMGUI_NODE_EDITOR:BOOL=OFF

//Disable imgui_tex_inspect
IMGUI_BUNDLE_DISABLE_IMGUI_TEX_INSPECT:BOOL=OFF

//Disable immvision
IMGUI_BUNDLE_DISABLE_IMMVISION:BOOL=OFF

//Disable implot
IMGUI_BUNDLE_DISABLE_IMPLOT:BOOL=OFF

//Disable nanovg
IMGUI_BUNDLE_DISABLE_NANOVG:BOOL=OFF

//Fail if immvision unavailable (OpenCV not found)
IMGUI_BUNDLE_FAIL_IF_IMMVISION_UNAVAILABLE:BOOL=OFF

//Install imgui_bundle
IMGUI_BUNDLE_INSTALL_CPP:BOOL=OFF

IMGUI_BUNDLE_PATH:STRING=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle

//include support for imgui_test_engine
IMGUI_BUNDLE_WITH_TEST_ENGINE:BOOL=ON

//fetch OpenCV
IMMVISION_FETCH_OPENCV:BOOL=OFF

//The directory containing a CMake configuration file for Stb.
Stb_DIR:PATH=Stb_DIR-NOTFOUND

//Automatically copy dependencies into the output directory for
// executables.
VCPKG_APPLOCAL_DEPS:BOOL=ON

//Additional options to bootstrap vcpkg
VCPKG_BOOTSTRAP_OPTIONS:STRING=

//The directory which contains the installed libraries for each
// triplet
VCPKG_INSTALLED_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed

//Additional install options to pass to vcpkg
VCPKG_INSTALL_OPTIONS:STRING=

//The path to the vcpkg manifest directory.
VCPKG_MANIFEST_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio

//Install the dependencies listed in your manifest:
//\n    If this is off, you will have to manually install your dependencies.
//\n    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md
// for more info.
//\n
VCPKG_MANIFEST_INSTALL:BOOL=ON

//Use manifest mode, as opposed to classic mode.
VCPKG_MANIFEST_MODE:BOOL=ON

//Overlay ports to use for vcpkg install in manifest mode
VCPKG_OVERLAY_PORTS:STRING=

//Overlay triplets to use for vcpkg install in manifest mode
VCPKG_OVERLAY_TRIPLETS:STRING=

//Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH
// and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are
// found after toolchain/system libraries/packages.
VCPKG_PREFER_SYSTEM_LIBS:BOOL=OFF

//Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths
VCPKG_SETUP_CMAKE_PROGRAM_PATH:BOOL=ON

//Vcpkg target triplet (ex. x86-windows)
VCPKG_TARGET_TRIPLET:STRING=x64-linux

//Trace calls to find_package()
VCPKG_TRACE_FIND_PACKAGE:BOOL=OFF

//Enables messages from the VCPKG toolchain for debugging purposes.
VCPKG_VERBOSE:BOOL=OFF

//Value Computed by CMake
VersorStudio_BINARY_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug

//Value Computed by CMake
VersorStudio_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
VersorStudio_SOURCE_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio

//(experimental) Automatically copy dependencies into the install
// target directory for executables. Requires CMake 3.14.
X_VCPKG_APPLOCAL_DEPS_INSTALL:BOOL=OFF

//(experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force
// serialization.
X_VCPKG_APPLOCAL_DEPS_SERIALIZED:BOOL=OFF

//Path to a program.
Z_VCPKG_CL:FILEPATH=Z_VCPKG_CL-NOTFOUND

//The directory which contains the installed libraries for each
// triplet
_VCPKG_INSTALLED_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed

//The directory containing a CMake configuration file for freetype.
freetype_DIR:PATH=freetype_DIR-NOTFOUND

//The directory containing a CMake configuration file for glad.
glad_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed/x64-linux/share/glad

//The directory containing a CMake configuration file for glfw3.
glfw3_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed/x64-linux/share/glfw3

//Value Computed by CMake
hello-imgui_BINARY_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/ThirdParty/imgui_bundle/external/hello_imgui/hello_imgui

//Value Computed by CMake
hello-imgui_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
hello-imgui_SOURCE_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle/external/hello_imgui/hello_imgui

//The directory containing a CMake configuration file for imgui.
imgui_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed/x64-linux/share/imgui

//Value Computed by CMake
imgui_bundle_BINARY_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/ThirdParty/imgui_bundle

//Value Computed by CMake
imgui_bundle_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
imgui_bundle_SOURCE_DIR:STATIC=/home/zerth/Documents/Development/Projects/VersorStudio/ThirdParty/imgui_bundle

//The directory containing a CMake configuration file for implot.
implot_DIR:PATH=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug/vcpkg_installed/x64-linux/share/implot


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/zerth/Documents/Development/Projects/VersorStudio/cmake-build-debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=28
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/home/zerth/Documents/Development/Tools/clion/bin/cmake/linux/x64/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/home/zerth/Documents/Development/Tools/clion/bin/cmake/linux/x64/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/home/zerth/Documents/Development/Tools/clion/bin/cmake/linux/x64/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/zerth/Documents/Development/Projects/VersorStudio
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/home/zerth/Documents/Development/Tools/clion/bin/cmake/linux/x64/share/cmake-3.28
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TAPI
CMAKE_TAPI-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TOOLCHAIN_FILE
CMAKE_TOOLCHAIN_FILE-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: FREETYPE_INCLUDE_DIR_freetype2
FREETYPE_INCLUDE_DIR_freetype2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FREETYPE_INCLUDE_DIR_ft2build
FREETYPE_INCLUDE_DIR_ft2build-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FREETYPE_LIBRARY_DEBUG
FREETYPE_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FREETYPE_LIBRARY_RELEASE
FREETYPE_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HELLOIMGUI_BUILD_DOCS
HELLOIMGUI_BUILD_DOCS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HELLOIMGUI_CREATE_ANDROID_STUDIO_PROJECT
HELLOIMGUI_CREATE_ANDROID_STUDIO_PROJECT-ADVANCED:INTERNAL=1
HELLOIMGUI_DEFAULT_BACKEND_FORBIDDEN:INTERNAL=ON
HELLOIMGUI_FETCH_FORBIDDEN:INTERNAL=ON
HELLOIMGUI_INSTALLABLE_DEPENDENCIES:INTERNAL=stb_hello_imgui
HELLOIMGUI_USING_VCPKG_TOOLCHAIN:INTERNAL=ON
//ADVANCED property for variable: HELLO_IMGUI_IMGUI_SHARED
HELLO_IMGUI_IMGUI_SHARED-ADVANCED:INTERNAL=1
IMGUI_BUNDLE_INSTALLABLE_DEPENDENCIES:INTERNAL=
//ADVANCED property for variable: VCPKG_VERBOSE
VCPKG_VERBOSE-ADVANCED:INTERNAL=1
//Making sure VCPKG_MANIFEST_MODE doesn't change
Z_VCPKG_CHECK_MANIFEST_MODE:INTERNAL=ON
//Vcpkg root directory
Z_VCPKG_ROOT_DIR:INTERNAL=/home/zerth/Documents/Development/Tools/vcpkg
//linker supports push/pop state
_CMAKE_LINKER_PUSHPOP_STATE_SUPPORTED:INTERNAL=TRUE

